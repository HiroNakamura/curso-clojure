(ns funciones)
;; Funciones
(defn sumar[x, y]
  (+ x y)
)

(defn restar[x, y]
  (- x y)
)

(defn multiplicar[x, y]
  (* x y)
)

(defn dividir[x, y]
  (/ x y)
)

(defn factorial [n]
  (if (= n 1)
     n
     (* n (factorial(dec n)))
  )
)


;;defino las funciones
(defn obtenerImc [p,t]
  (/ p (* t t)))


(defn obtenerPeso [t,i]
  (* i (* t t)))

(defn obtenerTalla [p,i]
  (Math/sqrt (/ p i)))


(defn getAleatorio [vector]
  (vector (rand-int (count vector)))
)

;;
(defn calcular [ a b c d e f denominador]
  (def x (/ (- (* c e) (* b f) ) denominador));;x
  (def y (/ (- (* a f) (* c d) ) denominador));;y
  (println "Solucion:\nx="x" , y="y)
  )


;;
(println "***** Funciones en Clojure *****")
;;defino dos variables: peso e imc
(def peso 74.8)
(def imc 18.0)
(def arreglo ["A" "B" "C" "D"])
(def mapa {"x" 1 "y" 2 "z" 3})
;;;
(def a 2)
(def b 5)
(def c 12)
(def d 47)
(def e 30)
(def f 71)
(def denominador (- (* a e) (* b d)))
(println "denomindador:"denominador)
(if (= denominador 0) 
  (println "Sin solucion!")
  (calcular a b c d e f denominador)
  );;fin if
;;
;;
(println "Suma de 4 + 6 = "(sumar 4 6))
(println "Resta de 10 + 3 = "(restar 4 6))
(println "Multiplicacion de 4 * 6 = "(multiplicar 4 6))
(println "Division de 25 / 5 = "(dividir 25 5))
(println "=====================================")
;;
(println "Vector:"arreglo)
(println "Tam. arreglo:"(count arreglo))
(println "Aleatorio:"(getAleatorio arreglo))
(println "=====================================")
;;
(println "Mapa:"mapa)
(println "Obteniendo valor de x:"(get mapa "x"))
(println "Obteniendo valor de y:"(get mapa "y"))
(println "Obteniendo valor de z:"(get mapa "z"))
(println "=====================================")
;; usando try-catch
(try
  (println "Talla ideal:" (obtenerTalla peso imc))
  (println "=====================================")
  (println "Factorial de 4: "(factorial 4))
  (println "Factorial de 5: "(factorial 5))
 (catch Exception e (str "error: " (.getMessage e)))
)
(println "=====================================")
